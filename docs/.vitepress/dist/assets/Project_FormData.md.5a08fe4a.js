import{_ as s,c as a,o as n,O as l}from"./chunks/framework.37ff8a7b.js";const A=JSON.parse('{"title":"FormData","description":"","frontmatter":{},"headers":[],"relativePath":"Project/FormData.md"}'),p={name:"Project/FormData.md"},o=l(`<h1 id="formdata" tabindex="-1">FormData <a class="header-anchor" href="#formdata" aria-label="Permalink to &quot;FormData&quot;">​</a></h1><h2 id="_1-关于为什么写这篇文章" tabindex="-1">1.关于为什么写这篇文章 <a class="header-anchor" href="#_1-关于为什么写这篇文章" aria-label="Permalink to &quot;1.关于为什么写这篇文章&quot;">​</a></h2><p>在常见的后台项目开发中，会有非常多的表单提交相关的内容，涉及到表单，就会有表单的校验，图片上传，附件上传等等。</p><h3 id="首先说校验" tabindex="-1">首先说校验 <a class="header-anchor" href="#首先说校验" aria-label="Permalink to &quot;首先说校验&quot;">​</a></h3><ol><li><p>表单的校验可谓是千奇百怪，输入框的非空校验，图片附件大小格式校验，这些都是一种常见的校验，无论是 ElementUI[<a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noreferrer">https://element.eleme.cn/#/zh-CN</a>]， 还是 Antd 都会有自己的表单校验方式，我们可以直接在官网参考实例写就可以了。</p></li><li><p>另外在校验的过程中，难免会碰到一些比较繁琐的例如手机号码，身份证等敏感且非常规需要使用正则 表达式进行数据校验的时候，在这里推荐使用的一个 VSCode 的小插件 any-role， 只需要在校验的 地方打出 @zz 就会有一大串正则校验规则供大家使用</p></li></ol><p>以上就是一些关于表单校验东西了</p><h2 id="_2-new-formdata-对象" tabindex="-1">2. new FormData() 对象 <a class="header-anchor" href="#_2-new-formdata-对象" aria-label="Permalink to &quot;2. new FormData() 对象&quot;">​</a></h2><p>相信你看到 new FormData() 这个实例对象的时候会想，这是什么，都没见过，OK，fine。让我们来看看 MDN 官方是怎么定义它的，它又是做什么的!</p><p>以下就是 MDN 的官方解释，我对其内做了精简，如果希望深入了解，可以直接跳过这里，直接查看 官方文档！</p><p>FormData 对象用以将数据编译成键值对向后端发送数据，其主要用于发送表单数据，也可以 独立于表单使用，向后端发送带键数据。</p><p>如果表单 enctypt 属性是 multipart/form-data，则会使用 submit()方法发送数据</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 创建一个formData 对象</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> formData </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FormData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 给 formData 对象 进行赋值操作</span></span>
<span class="line"><span style="color:#A6ACCD;">formData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> value)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 当你的表单所有的参数都需要进行formData 格式 给后端的时候</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 顺便复习一下for in...🍭</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> (</span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> key </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> formValue) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">formData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">key</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">formValue</span><span style="color:#F07178;">[</span><span style="color:#A6ACCD;">key</span><span style="color:#F07178;">])</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>后面就是表单的校验，直接提交就可以了，当然不要忘记 FormData 格式的数据需要在更换请求头</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">header</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">ContentType</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">multipart/form-data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#676E95;font-style:italic;">// 格式</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>那么，我为什会在这里为 new Form()这个实例对象专门写一篇文章呢，在常规的表单中，涉及到 文件我们是怎么操作的呢。相信大家可能会说是直接上传 oss 服务器，后端返回这个文件的 id，我 们会将这个文件的 id 带着表单其他数据提交对吧。但是这个时候，就是需要一个二进制的文件，就 是不能给你 id，那就只能交给前端来处理成二进制，利用 formData 格式的数据提交给后端了。</p><p>那么，在前端处理文件的时候，怎么将文件转换成二进制呢，直接上代码</p><h3 id="_1-文件处理" tabindex="-1">1. 文件处理 <a class="header-anchor" href="#_1-文件处理" aria-label="Permalink to &quot;1. 文件处理&quot;">​</a></h3><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 这里，我们以ElementPlus 的上传组件为例</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// upload 上传组件的 属性的 会 v-model 绑定一个数组格式来存放文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> uoloadFileList </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">([]) </span><span style="color:#676E95;font-style:italic;">// 双向绑定的数组</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// upload有一个onChange 属性，当文件数组发生改变的时候触发。我们就在这里处理这个文件</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> handleChange </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">uploadFile</span><span style="color:#89DDFF;">:</span><span style="color:#FFCB6B;">UploadFile</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 这里可以判读文件的大小 以2M大小为例</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">uploadFile</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">size</span><span style="color:#89DDFF;">!</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1024</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 提示一下</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 这里先不做处理，因为有时候不止上传一个文件对吧，先给他放进这个数组里</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 提交表单的时候统一做处理</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 注意这里是row这个字段</span></span>
<span class="line"><span style="color:#F07178;">       </span><span style="color:#A6ACCD;">uoloadFileList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">push</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">uploadFile</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">row</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 提交表单对文件做处理</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> submitForm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 创建 forData 实例</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">formData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">FormData</span><span style="color:#F07178;">()</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 说明上传了文件，做个小小的非空校验</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 还要说明一点是，这里 空数组 是 true 所以要 用length 来做校验</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//  Boolean([]) === true</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">uploadFileList</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">length</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">blobData</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Blob</span><span style="color:#F07178;">([</span><span style="color:#A6ACCD;">JSON</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">stringify</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">item</span><span style="color:#F07178;">)]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">application/json</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">File</span><span style="color:#F07178;">([</span><span style="color:#A6ACCD;">blobData</span><span style="color:#F07178;">]</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">item</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;">// 塞进formData 里，你的 文件就被转成二进制</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#A6ACCD;">formData</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">file</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="_2-图片处理" tabindex="-1">2. 图片处理 <a class="header-anchor" href="#_2-图片处理" aria-label="Permalink to &quot;2. 图片处理&quot;">​</a></h3><p>把图片转换成二进制塞进 formDat 和文件没什么两样</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 当然你也可以做一些大小的校验等等，这里有演示怎么转二进制就好了</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> applicationForm </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">FormData</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">imageLocal</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> URL</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">createObjectURL</span><span style="color:#A6ACCD;">(uploadFile</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">raw</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">applicationForm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">file1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> uploadFile</span><span style="color:#89DDFF;">?.</span><span style="color:#A6ACCD;">raw</span><span style="color:#89DDFF;">!</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">img</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">value </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> uploadFile</span></span></code></pre></div><p>以上就是在表单中常见，且又不怎么常见的 new FormData()的使用了，希望对你有所帮助，也非常感谢你的观看 如果觉得哪里有问题，欢迎更正。</p>`,22),e=[o];function t(c,r,y,F,D,i){return n(),a("div",null,e)}const d=s(p,[["render",t]]);export{A as __pageData,d as default};
